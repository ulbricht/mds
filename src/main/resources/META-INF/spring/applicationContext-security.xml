<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">


    <bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<security:filter-chain-map request-matcher="regex">


			<security:filter-chain pattern="/(datacentre|igsn|metadata|media|isometadata|igsnmetadata|oaisource)(/.*)?" filters="
			   securityContextPersistenceFilterWithASCFalse,
			   basicAuthenticationFilter,
			   basicExceptionTranslationFilter,
			   filterSecurityInterceptor" />

			<security:filter-chain pattern="/.*" filters=" 
			   securityContextPersistenceFilterWithASCTrue,
			   formLogoutFilter,
			   formLoginFilter,
			   securityContextHolder,
			   rememberMeFilter,
			   formExceptionTranslationFilter,
			   filterSecurityInterceptor,
			   switchUserProcessingFilter" />

		</security:filter-chain-map>
	</bean> 

	<bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">

		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="accessDecisionManager" ref="accessDecisionManager"/>

		<property name="securityMetadataSource">

			<security:filter-security-metadata-source use-expressions="false">
                <!-- API -->
                <security:intercept-url pattern="/datacentre/**" access="ROLE_ALLOCATOR" />
                <security:intercept-url pattern="/igsn/**" access="ROLE_DATACENTRE" />
                <security:intercept-url pattern="/metadata/**" access="ROLE_DATACENTRE,ROLE_ALLOCATOR" />
                <security:intercept-url pattern="/isometadata/**" access="ROLE_DATACENTRE,ROLE_ALLOCATOR" />
                <security:intercept-url pattern="/igsnmetadata/**" access="ROLE_DATACENTRE,ROLE_ALLOCATOR" />
                <security:intercept-url pattern="/media/**" access="ROLE_DATACENTRE,ROLE_ALLOCATOR" />
                <security:intercept-url pattern="/oaisource/**" access="ROLE_ADMIN,ROLE_DEV" />
                
                <!-- UI -->
                <security:intercept-url pattern="/allocators/**" access="ROLE_ADMIN,ROLE_DEV" />
                <security:intercept-url pattern="/datacentres/**" access="ROLE_ALLOCATOR,ROLE_DEV" />        
                <security:intercept-url pattern="/datasets/**" access="ROLE_DATACENTRE,ROLE_ALLOCATOR,ROLE_DEV" />
                <security:intercept-url pattern="/metadatas/**" access="ROLE_DATACENTRE,ROLE_ALLOCATOR,ROLE_DEV" />
                <security:intercept-url pattern="/medias/**" access="ROLE_DATACENTRE,ROLE_ALLOCATOR,ROLE_DEV" />
                <security:intercept-url pattern="/prefixes/**" access="ROLE_ADMIN,ROLE_DEV" />
                <security:intercept-url pattern="/prefixeslists/**" />
                <security:intercept-url pattern="/oaisourceses/**" access="ROLE_ADMIN,ROLE_DEV" />
                <security:intercept-url pattern="/userinfo/**" access="ROLE_ALLOCATOR,ROLE_DATACENTRE,ROLE_ADMIN,ROLE_DEV" />
				
                <!-- static content -->
                <security:intercept-url pattern="/resources/j_spring_security_switch_user" access="ROLE_DEV,ROLE_ADMIN,ROLE_ALLOCATOR" />
                <security:intercept-url pattern="/resources/**" />
                <security:intercept-url pattern="/static/**" />
		        <security:intercept-url pattern="/**" />
			</security:filter-security-metadata-source>

		</property>
	</bean>

    <bean id="webPrivilegeEvaluator" class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">
        <constructor-arg ref="filterSecurityInterceptor" />
    </bean>

    <bean id="passwordEncoder" class="org.datacite.mds.service.impl.PasswordEncoderImpl" />

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref='myAdminMasterUserDetailsService'>
            <security:password-encoder ref="passwordEncoder" />
        </security:authentication-provider>
        <security:authentication-provider user-service-ref='myAllocatorMasterUserDetailsService'>
            <security:password-encoder ref="passwordEncoder" />
        </security:authentication-provider>
        <security:authentication-provider user-service-ref='myUserDetailsService'>
            <security:password-encoder ref="passwordEncoder" />
        </security:authentication-provider>
        <security:authentication-provider ref='rememberMeAuthenticationProvider' />
    </security:authentication-manager>
    
    <bean id="myUserDetailsService" class="org.datacite.mds.service.userdetails.UserDetailsServiceImpl" />

    <bean id="myAllocatorMasterUserDetailsService" class="org.datacite.mds.service.userdetails.AllocatorMasterUserDetailsServiceImpl" >
        <property name="userDetailsService" ref="myUserDetailsService"/>
    </bean>
    
    <bean id="myAdminMasterUserDetailsService" class="org.datacite.mds.service.userdetails.AdminMasterUserDetailsServiceImpl" >
        <property name="userDetailsService" ref="myUserDetailsService"/>
    </bean>
    
    <bean id="emptyUserDetailsChecker" class="org.datacite.mds.web.ui.SwitchUserEmptyDetailsChecker" />
    
    <bean id="switchUserProcessingFilter" class="org.datacite.mds.web.ui.SwitchUserFilter">
        <property name="userDetailsService" ref="myUserDetailsService" />
        <property name="userDetailsChecker" ref="emptyUserDetailsChecker" />
        <property name="switchUserUrl" value="/resources/j_spring_security_switch_user" />
        <property name="exitUserUrl" value="/resources/j_spring_security_exit_user" />
        <property name="targetUrl" value="/" />
    </bean>

	<!-- Don't seem to be able to create one without session?? -->
	<bean id="securityContextPersistenceFilterWithASCFalse"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
        <constructor-arg>
            <bean class="org.datacite.mds.web.api.NullSecurityContextRepository"/>
        </constructor-arg>
	</bean>

	<bean id="securityContextPersistenceFilterWithASCTrue"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
        <constructor-arg>
            <bean class="org.springframework.security.web.context.HttpSessionSecurityContextRepository">
                <property name="disableUrlRewriting" value="true"/>
            </bean>
        </constructor-arg>
	</bean>
  

	<bean id="formLoginFilter" class="org.datacite.mds.web.ui.UsernamePasswordAuthenticationRequireCookiesFilter">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="rememberMeServices" ref="rememberMeServices"/>

		<property name="authenticationSuccessHandler">
			<bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
				<property name="defaultTargetUrl" value="/" />
			</bean>
		</property>
		<property name="authenticationFailureHandler">
			<bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<property name="defaultFailureUrl" value="/login?login_error=t" />
                <property name="useForward" value="true"/>
			</bean>
		</property>

		<property name="filterProcessesUrl" value="/resources/j_spring_security_check"/>
	</bean>  
	
	<bean id="formLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="/"/> <!-- URL redirected to after logout -->
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
				<ref bean="rememberMeServices"/>
			</list>
		</constructor-arg>
		<property name="filterProcessesUrl" value="/resources/j_spring_security_logout"/>
	</bean>

	<bean id="formAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg value="/login"/>
		<property name="forceHttps" value="true"/>
	</bean>		

	<bean id="formExceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<constructor-arg ref="formAuthenticationEntryPoint"/>
		<property name="accessDeniedHandler" ref="formAccessDeniedHandler"/>
	</bean>				

	<bean id="formAccessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage" value="/accessDenied"/> 
	</bean>		

	<bean id="basicAuthenticationFilter" 
		class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<constructor-arg ref="authenticationManager"/>
		<constructor-arg ref="basicAuthenticationEntryPoint"/>
	</bean>	

	<bean id="basicAuthenticationEntryPoint"
		class="org.datacite.mds.web.api.ApiBasicAuthenticationEntryPoint">
		<property name="realmName" value="mds.datacite.org"/>
	</bean>		

	<bean id="basicExceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<constructor-arg ref="basicAuthenticationEntryPoint"/>
		<property name="accessDeniedHandler" ref="basicAccessDeniedHandler"/>
	</bean>				

	<bean id="basicAccessDeniedHandler"
		class="org.datacite.mds.web.api.ApiAccessDeniedHandler">
	</bean>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false"/>
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
			</list>
		</constructor-arg>
	</bean>
    
    <bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<constructor-arg ref="authenticationManager"/>
		<constructor-arg ref="rememberMeServices"/>
    </bean>

	<bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<constructor-arg value="${salt.rememberMe}"/>
		<constructor-arg ref="myUserDetailsService"/>
		<property name="tokenValiditySeconds" value="2592000"/> <!-- 30 days -->
	</bean>
	
	<bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<constructor-arg value="${salt.rememberMe}"/>
	</bean>
	
	<bean id="securityContextHolder" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter"/>

</beans>
